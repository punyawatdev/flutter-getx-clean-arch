// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_getx_clean_arch/test/features/todos/data/repositories/todos_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes

// Dart imports:
import 'dart:async' as _i3;

// Package imports:
import 'package:mockito/mockito.dart' as _i1;

import 'package:flutter_getx_clean_arch/features/todos/data/datasources/local/todos_local_data_source.dart'
    as _i2;
import 'package:flutter_getx_clean_arch/features/todos/data/models/todo.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TodosDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodosDataSource extends _i1.Mock implements _i2.TodosDataSource {
  MockTodosDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.TodoHiveModel>> getTodos() => (super.noSuchMethod(
        Invocation.method(
          #getTodos,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.TodoHiveModel>>.value(<_i4.TodoHiveModel>[]),
      ) as _i3.Future<List<_i4.TodoHiveModel>>);

  @override
  _i3.Future<void> addTodo(_i4.TodoHiveModel? todo) => (super.noSuchMethod(
        Invocation.method(
          #addTodo,
          [todo],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateTodo(_i4.TodoHiveModel? todo) => (super.noSuchMethod(
        Invocation.method(
          #updateTodo,
          [todo],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateTodoStatus(
    String? todoId,
    bool? isCompleted,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTodoStatus,
          [
            todoId,
            isCompleted,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteTodo(String? todoId) => (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [todoId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<int> toggleCompletedAll() => (super.noSuchMethod(
        Invocation.method(
          #toggleCompletedAll,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<int> clearCompleted() => (super.noSuchMethod(
        Invocation.method(
          #clearCompleted,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
}
